dialogs_js();

/*⏬⏬⏬*/
var height = device.height;
var width = device.width;

function dialogs_js() {
    var xiazai = ("软件下载链接戳 https://www.lanzous.com/i7t4oqf");
    var ScriptVersion = ("Alpha1.2.0"); //版本
    log("软件脚本已开始运行，如果没有弹出菜单请强行停止再打开本软件！");
    var options_ = ["▶️ 开始运行脚本", "🕒 定时运行脚本", "⏹ 停止运行脚本", "🌐 向作者反馈问题", "💬 QQ分享给好友", "*️⃣ 脚本介绍&作者信息", "🔧 手动调用界面运行模式", "ℹ️ Q&A常见问题解答"]
    var i = dialogs.select("欢迎使用 (◍•ᴗ•◍)❤" + "\n" + "“能量++”" + ScriptVersion + "\n请选择一个要进行的选项", options_);
    if (i < 0) {
        toastLog("没有选择，如需关闭对话框\n  请选择“停止运行脚本”");
        dialogs_js();
    } else if (i == 0) {
        toastLog(options_[i]);
        context_Manualstate = 0;
        Set_Back_way();
    } else if (i == 2) {
        toastLog(options_[i]);
        exit();
    } else if (i == 3) {
        toastLog(options_[i]);
        app.openUrl("https://wj.qq.com/s2/4847356/63d5");
        dialogs_js();
    } else if (i == 4) {
        toastLog(options_[i]);
        var content = ("嘿！分享一个好用的软件给你，软件名叫“能量++”，它可以完美代替双手完成“淘宝双十二全民寻宝”的任务并增加能量哦，该软件使用“Auto.js”制作，且作者开放了脚本代码，绝对安全可靠！一键运行，支持安卓7及以上系统且屏幕宽度为720/1080/1440的所有设备哦，快来下载试试看吧～"+xiazai);
        app.startActivity({
            action: "android.intent.action.SEND",
            type: "text/*",
            extras: {
                "android.intent.extra.TEXT": content
            },
            packageName: "com.tencent.mobileqq",
            className: "com.tencent.mobileqq.activity.JumpActivity"
        });
        dialogs_js();
    } else if (i == 5) {
        alert("=(^･ω･^)=  脚本作者\n酷安@橘衫下邂逅的时光", "“能量++” " + ScriptVersion + "\n全自动的淘宝双十二活动脚本！\n支持屏幕宽度为720/1080/1440的所有设备，安卓7+无需ROOT！\n支持启动后自动更新脚本，无需费心即可保持最新，且开放全部的脚本代码！\n脚本的全部运行不加任何广告，不干任何不相关的事情！不触碰任何个人隐私！\n此脚本为兴趣制作，仅供参考，严禁售卖\n\n如有任何问题，欢迎向作者反馈哦～");
        dialogs_js();
    } else if (i == 6) {
        toastLog(options_[i]);
        var Manual_auto = confirm("(*・～・*)\n要以手动调用界面模式运行吗？", "点击“确定”后脚本依旧会按照自动运行的大部分代码运行，只不过脚本会在需要您点击“充能量”按钮时弹出对话框与气泡提示，您需要在每次气泡提示之后，点击“充能量”按钮进入【充能量中心】界面即可\n\nQ:我什么时候该用这个模式？\nA:若您在全自动运行过程中遇到错误在未得到解决时，可尝试以此模式运行且效果与全自动模式几乎没有差别");
        if (Manual_auto) {
            toastLog("已手动调用模式运行");
            sleep(1000);
            Set_Back_way();
            context_Manualstate = 1;
        } else {
            dialogs_js();
        }
    } else if (i == 1) {
        device.keepScreenDim();
        toastLog("检测权限设置……");
        context_Manualstate = 0;
        toastLog("等待无障碍权限开启……\n您必须手动授予本软件无障碍权限\n否则本软件将无法工作！");
        sleep(3000);
        auto.waitFor();
        toastLog("无障碍权限已开启" + "\n" + "继续运行脚本……");
        sleep(3000);
        toastLog("为保证脚本正常运行\n请授予本软件悬浮窗权限");
        sleep(2000);
        var test_rawWindow = floaty.rawWindow(
            <frame gravity="center" bg="#00000000"/>
        );
        test_rawWindow.setSize(-1, -1);
        test_rawWindow.setTouchable(false);
        setTimeout(() => {
            test_rawWindow.close();
        }, 1000);
        toastLog("悬浮窗权限已开启！");
        sleep(2000);
        wait_Time_over();
    } else if (i == 7) {
        Q_A_();
    }
}

function Q_A_() {
    var Q1 = ("1⃣MIUI11如何开启无障碍服务？");
    var A1 = ("💬一般情况下脚本运行会自动调出无障碍服务设置，之后只需在无障碍服务设置中找到“已下载的服务”点击后找到“能量++”打开即可。\n手动打开无障碍权限的方法为\n①打开“设置”→②在“搜索系统设置项”搜索“无障碍”点击第一项→③再在无障碍设置中找到“已下载的服务”点击进入后找到“能量++”打开即可");

    var Q2 = ("2⃣脚本突然停到淘宝搜索框不运行了，怎么办？");
    var A2 = ("💬这种情况一般是淘宝卡顿引起的。如脚本停到搜索框不动且日志中提示“找不到搜索按钮”您就可以尝试关掉淘宝再打开至淘宝搜索界面即可。若依然没有运行可尝试重启手机后再次运行脚本");

    var Q3 = ("3⃣脚本提示找图后停止运行脚本了，怎么办？");
    var A3 = ("💬这是由于脚本不支持在您的设备点击准确的坐标，而尝试通过找图定位点击按钮。如遇到这种情况你可以尝试脚本主菜单中的“手动调用界面运行模式”，但需要您在脚本提示之后手动点击淘宝活动中的“充能量”按钮哦～");

    var Q4 = ("4⃣启动软件时经常会出现一大段红字错误，怎么办？");
    var A4 = ("💬目前本软件有两个脚本源的版本。出现此错误是由于您下载的是Github脚本源的版本，因为Github服务器的原因会经常出现此错误，但一般重试几次就好了！如果重试多次还是这样您也可以下载更稳定的“能量++”Alpha1.1.0(阿里云脚本源)的版本哦～\n如需下载新脚本源的“能量++”Alpha1.1.0版本请点击确定");

    var Q5 = ("5⃣脚本运行到活动界面提示找不到任务");
    var A5 = ("💬如出现此问题请先检查一下“充能量中心”中是不是真的没有任务了，如果有任务可以尝试重启手机后重新运行脚本，若重启后依然在活动界面提示找不到任务请立即向作者反馈");

    var Q6 = ("6⃣安卓6.0以下系统能否使用本脚本？");
    var A6 = ("💬本脚本完全使用Auto.js制作。因此在安卓6.0以下系统会不支持无障碍服务以及造成大量函数失效，因此本脚本是不支持安卓6.0及以下系统的，敬请谅解");

    var Q7 = ("7⃣定时运行之后却没有在预定的时间运行脚本");
    var A7 = ("💬使用定时运行脚本会自动设置屏幕常亮并驻留后台，但清理本软件或者锁屏甚至关机以及关闭本软件必要的无障碍权限和悬浮窗权限都将会使定时运行失效，建议在定时运行时将本软件加入清理白名单或锁定本软件后台且不要锁屏以及不要关闭无障碍与悬浮窗权限即可");

    var Q_A_options = [Q1, Q2, Q3, Q4, Q5, Q6, Q7]
    var Q_A = dialogs.select("◖⚆ᴥ⚆◗\n Q&A常见问题解答", Q_A_options);
    if (Q_A == 0) {
        dialogs.alert(Q1, A1);
        Q_A_();
    } else if (Q_A == 1) {
        dialogs.alert(Q2, A2);
        Q_A_();
    } else if (Q_A == 2) {
        dialogs.alert(Q3, A3);
        Q_A_();
    } else if (Q_A == 3) {
        var confirm_Q4 = dialogs.confirm(Q4, A4);
        if (confirm_Q4 == true) {
            app.openUrl("https://www.lanzous.com/i7t4oqf");
            exit();
        } else {
            Q_A_();
        }
    } else if (Q_A == 4) {
        dialogs.alert(Q5, A5);
        Q_A_();
    } else if (Q_A == 5) {
        dialogs.alert(Q6, A6);
        Q_A_();
    } else if (Q_A == 6) {
        dialogs.alert(Q7, A7);
        Q_A_();
    } else if (Q_A < 0) {
        dialogs_js();
    }
}

function Set_Back_way() {
    //💟🕎⛎设定返回方法及滑动速度的代码
    var options_hq = ["🔙 普通的返回\n(使用无障碍权限)", "#⃣ 使用ROOT返回\n(必须授予本软件ROOT权限)", "👉👉🏻👉🏼👉🏽👉🏾👉🏿 \n从屏幕中间从左向内滑动\n(全面屏手势返回 例如:小米MIUI)", "              👈🏿👈🏾👈🏽👈🏼👈🏻👈 \n从屏幕中间从右向内滑动\n(全面屏手势返回 例如:华为EMUI)", "👆👆🏻👆🏼👆🏽👆🏾👆🏿 \n从屏幕左侧下方向上滑动\n(全面屏手势返回 例如:锤子Smartisan UI)", "               ☝🏿☝🏾☝🏽☝🏼☝🏻☝️ \n从屏幕右侧下方向上滑动\n(全面屏手势返回)"]
    var i_back = dialogs.select(" Hi! ( ╹▽╹ )\n请选择一个方法\n用于实现返回操作", options_hq);
    if (i_back >= 0) {
        toastLog("您选择的是" + options_hq[i_back]);
        sleep(2000);
        var options_select = options_hq[i_back];
        context_i_back = i_back;
    } else {
        toastLog("没有选择返回方法！");
        device.cancelKeepingAwake();
        dialogs_js();
    }
    if (i_back >= 2) {
        var options_hd = ["200毫秒\n(默认，如果太快请选其它)", "500毫秒", "800毫秒", "1秒(1000毫秒)", "1.5秒（1500毫秒）", "2秒（2000毫秒）"]
        var iix = dialogs.select("Ok! (・∀・) 您选择了:\n" + options_select + "\n请选择滑动速度\n单位:毫秒（1秒=1000毫秒）", options_hd);
    }
    if (iix == 0) {
        context_gestures_speed = 200;
        toastLog("滑动速度设定为\n" + context_gestures_speed + "毫秒");
        sleep(2000);
    }
    if (iix == 1) {
        context_gestures_speed = 500;
        toastLog("滑动速度设定为\n" + context_gestures_speed + "毫秒");
        sleep(2000);
    }
    if (iix == 2) {
        context_gestures_speed = 800;
        toastLog("滑动速度设定为\n" + context_gestures_speed + "毫秒");
        sleep(2000);
    }
    if (iix == 3) {
        context_gestures_speed = 1000;
        toastLog("滑动速度设定为\n" + context_gestures_speed + "毫秒");
        sleep(2000);
    }
    if (iix == 4) {
        context_gestures_speed = 1500;
        toastLog("滑动速度设定为\n" + context_gestures_speed + "毫秒");
        sleep(2000);
    }
    if (iix == 5) {
        context_gestures_speed = 2000;
        toastLog("滑动速度设定为\n" + context_gestures_speed + "毫秒");
        sleep(2000);
    }
    if (iix < 0) {
        toastLog("没有选择滑动速度");
        Set_Back_way();
    }
}
sleep(1000);
toastLog("等待无障碍权限开启……\n您必须手动授予本软件无障碍权限\n否则本软件将无法工作！");
auto.waitFor();
toastLog("无障碍权限已开启" + "\n" + "继续运行脚本……");
sleep(2000);

function wait_Time_over() {
    var i_wait = dialogs.singleChoice("🕗 定时运行\n\n(＾∇＾)ﾉ♪\n请选择一个选项\n计时结束会自动运行", ["1分钟后运行", "5分钟后运行", "10分钟后运行", "30分钟后运行", "一小时后运行", "两小时后运行", "三小时后运行", "五小时后运行", "八小时后运行"], 2);
    if (i_wait < 0) {
        toast("您取消了选择");
        device.cancelKeepingAwake();
        dialogs_js();
    }
    if (i_wait >= 0) {
        context_i_wait = i_wait;
    }
    if (i_wait == 0) {
        var choice_confirm = dialogs.confirm("您选择了1分钟后运行", "点击确定进行一次设定返回操作的方法后，脚本将在您设定的时间结束后开始自动运行\n请不要清理本软件的后台或者锁屏手机等，否则可能会造成定时任务失效");
        if (choice_confirm == false) {
            toastLog("取消了定时运行确认");
            wait_Time_over();
        } else {
            Set_Back_way();
            waiting_time();
        }
    }
    if (i_wait == 1) {
        var choice_confirm = dialogs.confirm("您选择了5分钟后运行", "点击确定进行一次设定返回操作的方法后，脚本将在您设定的时间结束后开始自动运行\n请不要清理本软件的后台或者锁屏手机等，否则可能会造成定时任务失效");
        if (choice_confirm == false) {
            toastLog("取消了定时运行确认");
            wait_Time_over();
        } else {
            Set_Back_way();
            waiting_time();
        }
    }
    if (i_wait == 2) {
        var choice_confirm = dialogs.confirm("您选择了10分钟后运行", "点击确定进行一次设定返回操作的方法后，脚本将在您设定的时间结束后开始自动运行\n请不要清理本软件的后台或者锁屏手机等，否则可能会造成定时任务失效");
        if (choice_confirm == false) {
            toastLog("取消了定时运行确认");
            wait_Time_over();
        } else {
            Set_Back_way();
            waiting_time();
        }
    }
    if (i_wait == 3) {
        var choice_confirm = dialogs.confirm("您选择了30分钟后运行", "点击确定进行一次设定返回操作的方法后，脚本将在您设定的时间结束后开始自动运行\n请不要清理本软件的后台或者锁屏手机等，否则可能会造成定时任务失效");
        if (choice_confirm == false) {
            toastLog("取消了定时运行确认");
            wait_Time_over();
        } else {
            Set_Back_way();
            waiting_time();
        }
    }
    if (i_wait == 4) {
        var choice_confirm = dialogs.confirm("您选择了一小时后运行", "点击确定进行一次设定返回操作的方法后，脚本将在您设定的时间结束后开始自动运行\n请不要清理本软件的后台或者锁屏手机等，否则可能会造成定时任务失效");
        if (choice_confirm == false) {
            toastLog("取消了定时运行确认");
            wait_Time_over();
        } else {
            Set_Back_way();
            waiting_time();
        }
    }
    if (i_wait == 5) {
        var choice_confirm = dialogs.confirm("您选择了两小时后运行", "点击确定进行一次设定返回操作的方法后，脚本将在您设定的时间结束后开始自动运行\n请不要清理本软件的后台或者锁屏手机等，否则可能会造成定时任务失效");
        if (choice_confirm == false) {
            toastLog("取消了定时运行确认");
            wait_Time_over();
        } else {
            Set_Back_way();
            waiting_time();
        }
    }
    if (i_wait == 6) {
        var choice_confirm = dialogs.confirm("您选择了三小时后运行", "点击确定进行一次设定返回操作的方法后，脚本将在您设定的时间结束后开始自动运行\n请不要清理本软件的后台或者锁屏手机等，否则可能会造成定时任务失效");
        if (choice_confirm == false) {
            toastLog("取消了定时运行确认");
            wait_Time_over();
        } else {
            Set_Back_way();
            waiting_time();
        }
    }
    if (i_wait == 7) {
        var choice_confirm = dialogs.confirm("您选择了五小时后运行", "点击确定进行一次设定返回操作的方法后，脚本将在您设定的时间结束后开始自动运行\n请不要清理本软件的后台或者锁屏手机等，否则可能会造成定时任务失效");
        if (choice_confirm == false) {
            toastLog("取消了定时运行确认");
            wait_Time_over
        } else {
            Set_Back_way();
            waiting_time();
        }
    }
    if (i_wait == 8) {
        var choice_confirm = dialogs.confirm("您选择了八小时后运行", "点击确定进行一次设定返回操作的方法后，脚本将在您设定的时间结束后开始自动运行\n请不要清理本软件的后台或者锁屏手机等，否则可能会造成定时任务失效");
        if (choice_confirm == false) {
            toastLog("取消了定时运行确认");
            wait_Time_over();
        } else {
            Set_Back_way();
            waiting_time();
        }
    }
}

function waiting_time() {
    //计时运行脚本
    if (context_i_wait == 0) {
        var Seconds = 60;
        for (Seconds == 60; Seconds > 0; Seconds--) {
            console.warn("【定时运行】计时中……\n" + Seconds + "秒后开始运行");
            sleep(1000);
        }
    }
    if (context_i_wait == 1) {
        var Minutes = 4;
        for (Minutes == 4; Minutes >= 0; Minutes--) {
            if (Minutes >= 0) {
                var Seconds = 60;
                for (Seconds == 60; Seconds > 0; Seconds--) {
                    console.warn("【定时运行】计时中……\n" + Minutes + "分钟" + Seconds + "秒后开始运行");
                    sleep(1000);
                }
            }
        }
    }
    if (context_i_wait == 2) {
        var Minutes = 9;
        for (Minutes == 9; Minutes >= 0; Minutes--) {
            if (Minutes >= 0) {
                var Seconds = 60;
                for (Seconds == 60; Seconds > 0; Seconds--) {
                    console.warn("【定时运行】计时中……\n" + Minutes + "分钟" + Seconds + "秒后开始运行");
                    sleep(1000);
                }
            }
        }
    }
    if (context_i_wait == 3) {
        var Minutes = 29;
        for (Minutes == 29; Minutes >= 0; Minutes--) {
            if (Minutes >= 0) {
                var Seconds = 60;
                for (Seconds == 60; Seconds > 0; Seconds--) {
                    console.warn("【定时运行】计时中……\n" + Minutes + "分钟" + Seconds + "秒后开始运行");
                    sleep(1000);
                }
            }
        }
    }
    if (context_i_wait == 4) {
        var Minutes = 59;
        for (Minutes == 59; Minutes >= 0; Minutes--) {
            if (Minutes >= 0) {
                var Seconds = 60;
                for (Seconds == 60; Seconds > 0; Seconds--) {
                    console.warn("【定时运行】计时中……\n" + Minutes + "分钟" + Seconds + "秒后开始运行");
                    sleep(1000);
                }
            }
        }
    }
    if (context_i_wait == 5) {
        var Hours = 1;
        for (Hours == 1; Hours >= 0; Hours--) {
            var Minutes = 59;
            for (Minutes == 59; Minutes >= 0; Minutes--) {
                if (Minutes >= 0) {
                    var Seconds = 60;
                    for (Seconds == 60; Seconds > 0; Seconds--) {
                        console.warn("【定时运行】计时中……\n" + Hours + "小时" + Minutes + "分钟" + Seconds + "秒后开始运行");
                        sleep(1000);
                    }
                }
            }
        }
    }
    if (context_i_wait == 6) {
        var Hours = 2;
        for (Hours == 2; Hours >= 0; Hours--) {
            var Minutes = 59;
            for (Minutes == 59; Minutes >= 0; Minutes--) {
                if (Minutes >= 0) {
                    var Seconds = 60;
                    for (Seconds == 60; Seconds > 0; Seconds--) {
                        console.warn("【定时运行】计时中……\n" + Hours + "小时" + Minutes + "分钟" + Seconds + "秒后开始运行");
                        sleep(1000);
                    }
                }
            }
        }
    }
    if (context_i_wait == 7) {
        var Hours = 4;
        for (Hours == 4; Hours >= 0; Hours--) {
            var Minutes = 59;
            for (Minutes == 59; Minutes >= 0; Minutes--) {
                if (Minutes >= 0) {
                    var Seconds = 60;
                    for (Seconds == 60; Seconds > 0; Seconds--) {
                        console.warn("【定时运行】计时中……\n" + Hours + "小时" + Minutes + "分钟" + Seconds + "秒后开始运行");
                        sleep(1000);
                    }
                }
            }
        }
    }
    if (context_i_wait == 8) {
        var Hours = 7;
        for (Hours == 7; Hours >= 0; Hours--) {
            var Minutes = 59;
            for (Minutes == 59; Minutes >= 0; Minutes--) {
                if (Minutes >= 0) {
                    var Seconds = 60;
                    for (Seconds == 60; Seconds > 0; Seconds--) {
                        console.warn("【定时运行】计时中……\n" + Hours + "小时" + Minutes + "分钟" + Seconds + "秒后开始运行");
                        sleep(1000);
                    }
                }
            }
        }
    }
}

//下面是悬浮窗
var window = floaty.window(
    <frame>
        <button id="action" text="点击停止脚本" w="120" h="40" bg="#F0EB4336"/>
    </frame>
);
setInterval(() => {}, 1000);
var execution = null;
//记录按键被按下时的触摸坐标
var x = 0,
    y = 0;
//记录按键被按下时的悬浮窗位置
var windowX, windowY;
//记录按键被按下的时间以便判断长按等动作
var downTime;
window.action.setOnTouchListener(function(view, event) {
    switch (event.getAction()) {
        case event.ACTION_DOWN:
            x = event.getRawX();
            y = event.getRawY();
            windowX = window.getX();
            windowY = window.getY();
            downTime = new Date().getTime();
            return true;
        case event.ACTION_MOVE:
            //移动手指时调整悬浮窗位置
            window.setPosition(windowX + (event.getRawX() - x),
                windowY + (event.getRawY() - y));
            //如果按下的时间超过1.5秒判断为长按，退出脚本
            if (new Date().getTime() - downTime > 1500) {
                toast("长按可以移动位置哦～");
            }
            return true;
        case event.ACTION_UP:
            //手指弹起时如果偏移很小则判断为点击
            if (Math.abs(event.getRawY() - y) < 5 && Math.abs(event.getRawX() - x) < 5) {
                onClick();
            }
            return true;
    }
    return true;
});

function onClick() {
    dialogs.alert("已停止运行脚本！");
    log("用户点击了停止按钮");
    engines.stopAllAndToast();
}

currentActivity();
openTBandsearch();

function openTBandsearch() {
    sleep(1000);
    app.startActivity({
        packageName: "com.taobao.taobao",
        className: "com.taobao.search.searchdoor.SearchDoorActivity"
    });
    toastLog("若长时间没有打开淘宝\n请自行打开淘宝至搜索界面！");
    /*if (currentActivity() == "com.taobao.search.searchdoor.SearchDoorActivity") {
        sleep(1000);
        setText("双十二全民寻宝");
    } else {
        toastLog("检测到当前并非搜索界面，等待3秒后自动重试*1");
        sleep(3000);
        if (currentActivity() == "com.taobao.search.searchdoor.SearchDoorActivity") {
            sleep(1000);
            setText("双十二全民寻宝");
        } else {
            toastLog("检测到当前并非搜索界面，等待3秒后自动重试*2");
            sleep(3000);
            if (currentActivity() == "com.taobao.search.searchdoor.SearchDoorActivity") {
                sleep(1000);
                setText("双十二全民寻宝");
            } else {
                toastLog("检测到当前并非搜索界面，等待3秒后自动重试*3");
                sleep(3000);
                if (currentActivity() == "com.taobao.search.searchdoor.SearchDoorActivity") {
                    sleep(1000);
                    setText("双十二全民寻宝");
                } else {
                    toastLog("已重试3次了，依然检测不到搜索界面，取消检测当前Activity，继续重试一次");
                    sleep(3000);
                    setText("双十二全民寻宝");
                }
            }
        }
    }*/
    toastLog("请等待3秒……");
    sleep(3000);
    if (text("搜索").exists()) {
        sleep(1000);
        setText("双十二全民寻宝");
        sleep(1000);
        text("搜索").findOne().click();
    } else {
        toastLog("找不到搜索按钮，3秒后重试*1");
        sleep(3000);
        if (text("搜索").exists()) {
            sleep(1000);
            setText("双十二全民寻宝");
            sleep(1000);
            text("搜索").findOne().click();
        } else {
            toastLog("找不到搜索按钮，3秒后重试*2");
            sleep(3000);
            if (text("搜索").exists()) {
                sleep(1000);
                setText("双十二全民寻宝");
                sleep(1000);
                text("搜索").findOne().click();
            } else {
                toastLog("找不到搜索按钮，3秒后重试*3");
                sleep(3000);
                if (text("搜索").exists()) {
                    sleep(1000);
                    setText("双十二全民寻宝");
                    sleep(1000);
                    text("搜索").findOne().click();
                } else {
                    dialogs.alert("脚本在当前界面找不到搜索按钮，可能是淘宝太卡的问题，您可以尝试重启手机再试试，点击确定返回主菜单");
                    dialogs_js();
                }
            }
        }
    }
}
jinhuodong();

function jinhuodong() {
    sleep(3000);
    var refresh = 1;
    if (text("重新加载").exists()) {
        text("重新加载").findOne().click();
        toastLog("可能是您的网络问题" + "\n" + "正在刷新重试……" + "\n" + "这是第" + refresh + "次刷新");
        refresh++;
        sleep(5000);
        if (text("重新加载").exists()) {
            text("重新加载").findOne().click();
            toastLog("可能是您的网络问题" + "\n" + "正在刷新重试……" + "\n" + "这是第" + refresh + "次刷新");
            refresh++;
            sleep(5000);
            if (text("重新加载").exists()) {
                text("重新加载").findOne().click();
                toastLog("可能是您的网络问题" + "\n" + "正在刷新重试……" + "\n" + "这是第" + refresh + "次刷新");
                refresh++;
                sleep(5000);
                if (text("重新加载").exists()) {
                    text("重新加载").findOne().click();
                    toastLog("可能是您的网络问题" + "\n" + "正在刷新重试……" + "\n" + "这是第" + refresh + "次刷新");
                    refresh++;
                    sleep(5000);
                    if (text("重新加载").exists()) {
                        text("重新加载").findOne().click();
                        toastLog("可能是您的网络问题" + "\n" + "正在刷新重试……" + "\n" + "这是第" + refresh + "次刷新");
                        sleep(5000);
                        if (text("重新加载").exists()) {
                            dialogs.alert("(●´⌓`●)\n已经刷新5次了还是未能进入活动页面\n请检查网络后再重新运行脚本吧～");
                            exit();
                        }
                    }
                }
            }
        }
    }
    if (text("刷新重试").exists()) {
        text("刷新重试").findOne().click();
        toastLog("可能是您的网络问题" + "\n" + "正在刷新重试……" + "\n" + "这是第" + refresh + "次刷新");
        refresh++;
        sleep(5000);
        if (text("刷新重试").exists()) {
            text("刷新重试").findOne().click();
            toastLog("可能是您的网络问题" + "\n" + "正在刷新重试……" + "\n" + "这是第" + refresh + "次刷新");
            refresh++;
            sleep(5000);
            if (text("刷新重试").exists()) {
                text("刷新重试").findOne().click();
                toastLog("可能是您的网络问题" + "\n" + "正在刷新重试……" + "\n" + "这是第" + refresh + "次刷新");
                refresh++;
                sleep(5000);
                if (text("刷新重试").exists()) {
                    text("刷新重试").findOne().click();
                    toastLog("可能是您的网络问题" + "\n" + "正在刷新重试……" + "\n" + "这是第" + refresh + "次刷新");
                    refresh++;
                    sleep(5000);
                    if (text("刷新重试").exists()) {
                        text("刷新重试").findOne().click();
                        toastLog("可能是您的网络问题" + "\n" + "正在刷新重试……" + "\n" + "这是第" + refresh + "次刷新");
                        sleep(5000);
                        if (text("刷新重试").exists()) {
                            dialogs.alert("(˘･_･˘)\n已经刷新5次了还是未能进入活动页面，可能是网络问题也有是淘宝出现了BUG，建议您关掉淘宝后再重新运行脚本吧～");
                            exit();
                        }
                    }
                }
            }
        }
    }
    var dengdai10s = 10;
    for (dengdai10s == 10; dengdai10s > 0; dengdai10s--) {
        toastLog("正在等待活动界面加载\n剩余" + dengdai10s + "秒……");
        sleep(1000);
    }
}
if (context_Manualstate == 1) {
    dialogs.alert("您当前已手动调用界面模式运行！\n请准备点击“充能量”按钮进入“充能量中心”即可！\n\n准备好了就点“确定”哦～");
    var Tips_clickbutton = 5;
    for (Tips_clickbutton == 5; Tips_clickbutton > 0; Tips_clickbutton--) {
        toastLog("请点击“充能量”按钮进入充能量中心即可\n剩余" + Tips_clickbutton + "秒后开始进行自动任务……");
        sleep(2000);
    }
} else {
    click_powerˉqiandao();
}

function click_powerˉqiandao() {
    if (width == 1080) {
        click(950, 1600);
    } else if (width == 1440) {
        click(1270, 2180);
    } else if (width == 720) {
        click(638, 1090);
    } else {
        toastLog("正在找图，不要急哦");
        var img = images.load("https://s2.ax1x.com/2019/12/02/QnNQ10.png");
        var templ = images.load("https://s2.ax1x.com/2019/12/02/QnU38I.png");
        var p = findImage(img, templ);
        if (p) {
            toastLog("找到了“充能量”图片\n坐标为" + p);
            sleep(2000);
            click(p.x + 20, p.y + 20);
        } else {
            toast("没找到“充能量”图片");
            dialogs.alert("可能本脚本不支持您的分辨率哦～", "快向作者反馈这个问题，让作者尝试为你解决吧～");
            exit();
        }
    } //其它不支持的分辨率尝试找图来点击按钮
    sleep(3000);
    if (text("去签到").exists()) {
        text("去签到").findOne().click();
    }
}
main_js_clickAll15s();

function Justback() {
    //💝💝💝💝💝使用用户设定的返回方法
    if (context_i_back == 0) {
        sleep(1000);
        toastLog("使用普通的返回");
        back();
        sleep(2000);
    }
    if (context_i_back == 1) {
        sleep(1000);
        toastLog("使用ROOT返回\n请确保已给ROOT权限！");
        Back();
        sleep(2000);
    }
    if (context_i_back == 2) {
        sleep(1000);
        toastLog("从屏幕中间向从左向内滑动来返回");
        gestures([context_gestures_speed, [0, height / 2],
            [500, height / 2]
        ]);
        sleep(2000);
    }
    if (context_i_back == 4) {
        sleep(1000);
        toastLog("从屏幕左侧下方向上滑动来返回");
        gestures([context_gestures_speed, [width / 2 - 300, height - 1],
            [width / 2 - 300, height - 500]
        ]);
        sleep(2000);
    }
    if (context_i_back == 3) {
        sleep(1000);
        toastLog("从屏幕中间向从右向内滑动来返回");
        gestures([context_gestures_speed, [width - 1, height / 2],
            [width - 500, height / 2]
        ]);
        sleep(2000);
    }
    if (context_i_back == 5) {
        sleep(1000);
        toastLog("从屏幕左侧下面向上面滑动来返回");
        gestures([context_gestures_speed, [width / 2 + 300, height - 1],
            [width / 2 + 300, height - 500]
        ]);
        sleep(2000);
    }
}

function main_js_clickAll15s() {
    if (text("去签到").exists()) {
        text("去签到").findOne().click();
        sleep(2000);
    }
    while (textContains("去浏览").exists()) {
        textContains("去浏览").findOne().click();
        sleep(3000);
        if (currentActivity() == "com.taobao.tao.TBMainActivity") {
            sleep(3000);
            if (text("每日首次点击频道卡片，领惊喜能量值").exists()) {
                sleep(1000);
                if (text("支付宝").exists()) {
                    var O = text("支付宝").findOne().bounds();
                    click(O.centerX(), O.centerY());
                    openTBandsearch();
                    jinhuodong();
                    if (context_Manualstate == 1) {
                        dialogs.alert("您当前已手动调用界面模式运行！\n请准备点击“充能量”按钮进入“充能量中心”即可！\n\n准备好了就点“确定”哦～");
                        var Tips_clickbutton = 5;
                        for (Tips_clickbutton == 5; Tips_clickbutton > 0; Tips_clickbutton--) {
                            toastLog("请点击“充能量”按钮进入充能量中心即可\n剩余" + Tips_clickbutton + "秒后开始进行自动任务……");
                            sleep(2000);
                        }
                    } else {
                        click_powerˉqiandao();
                    }
                } else if (text("金币庄园").exists()) {
                    var O = text("金币庄园").findOne().bounds();
                    click(O.centerX(), O.centerY());
                    openTBandsearch();
                    jinhuodong();
                    if (context_Manualstate == 1) {
                        dialogs.alert("您当前已手动调用界面模式运行！\n请准备点击“充能量”按钮进入“充能量中心”即可！\n\n准备好了就点“确定”哦～");
                        var Tips_clickbutton = 5;
                        for (Tips_clickbutton == 5; Tips_clickbutton > 0; Tips_clickbutton--) {
                            toastLog("请点击“充能量”按钮进入充能量中心即可\n剩余" + Tips_clickbutton + "秒后开始进行自动任务……");
                            sleep(2000);
                        }
                    } else {
                        click_powerˉqiandao();
                    }
                } else if (text("天猫榜单").exists()) {
                    var O = text("天猫榜单").findOne().bounds();
                    click(O.centerX(), O.centerY());
                    openTBandsearch();
                    jinhuodong();
                    if (context_Manualstate == 1) {
                        dialogs.alert("您当前已手动调用界面模式运行！\n请准备点击“充能量”按钮进入“充能量中心”即可！\n\n准备好了就点“确定”哦～");
                        var Tips_clickbutton = 5;
                        for (Tips_clickbutton == 5; Tips_clickbutton > 0; Tips_clickbutton--) {
                            toastLog("请点击“充能量”按钮进入充能量中心即可\n剩余" + Tips_clickbutton + "秒后开始进行自动任务……");
                            sleep(2000);
                        }
                    } else {
                        click_powerˉqiandao();
                    }
                }
            } //判断是不是在进行“去我的淘宝点击访问频道(0/1) 点击频道得10000能量 去浏览”任务
            if (text("猜你喜欢").exists()) {
                var dengdai10s = 10;
                for (dengdai10s == 10; dengdai10s > 0; dengdai10s--) {
                    toastLog("正在完成“浏览15秒”任务\n剩余" + dengdai10s + "秒……")
                    sleep(2000);
                    swipe(width / 2, height - 600, width / 2, 0, 500);
                }
                openTBandsearch();
                jinhuodong();
                if (context_Manualstate == 1) {
                    dialogs.alert("您当前已手动调用界面模式运行！\n请准备点击“充能量”按钮进入“充能量中心”即可！\n\n准备好了就点“确定”哦～");
                    var Tips_clickbutton = 5;
                    for (Tips_clickbutton == 5; Tips_clickbutton > 0; Tips_clickbutton--) {
                        toastLog("请点击“充能量”按钮进入充能量中心即可\n剩余" + Tips_clickbutton + "秒后开始进行自动任务……");
                        sleep(2000);
                    }
                } else {
                    click_powerˉqiandao();
                }
            } //判断是不是在进行浏览15秒“猜你喜欢”页面
        } else if (currentActivity() == "com.taobao.browser.MultiBrowserActivity") {
            /*Justback();
            sleep(2000);
            if (text("已完成").exists()) {
                toastLog("已返回活动界面")
            } else {
                if (id("button2").exists()) {
                    var H = id("button2").findOne().bounds();
                    click(H.centerX(), H.centerY());
                }
                sleep(1000);
                if (currentActivity() == "com.taobao.browser.MultiBrowserActivity") {
                    Justback();
                    if (id("button2").exists()) {
                        var H = id("button2").findOne().bounds();
                        click(H.centerX(), H.centerY());
                    }
                    sleep(1000);
                    if (currentActivity() == "com.taobao.browser.MultiBrowserActivity") {
                        Justback();
                        if (id("button2").exists()) {
                            var H = id("button2").findOne().bounds();
                            click(H.centerX(), H.centerY());
                        }
                        sleep(1000);
                    }
                }
            }*/
            var dengdai10s = 10;
            for (dengdai10s == 10; dengdai10s > 0; dengdai10s--) {
                toastLog("正在完成“去看看淘宝人生”任务\n等待加载剩余" + dengdai10s + "秒……")
                sleep(2000);
            }
            toastLog("已完成“淘宝人生”任务");
            openTBandsearch();
            jinhuodong();
            if (context_Manualstate == 1) {
                dialogs.alert("您当前已手动调用界面模式运行！\n请准备点击“充能量”按钮进入“充能量中心”即可！\n\n准备好了就点“确定”哦～");
                var Tips_clickbutton = 5;
                for (Tips_clickbutton == 5; Tips_clickbutton > 0; Tips_clickbutton--) {
                    toastLog("请点击“充能量”按钮进入充能量中心即可\n剩余" + Tips_clickbutton + "秒后开始进行自动任务……");
                    sleep(2000);
                }
            } else {
                click_powerˉqiandao();
            }
        } else {
            var dengdai10s = 10;
            for (dengdai10s == 10; dengdai10s > 0; dengdai10s--) {
                toastLog("正在完成“浏览15秒”任务\n剩余" + dengdai10s + "秒……")
                sleep(2000);
                swipe(width / 2, height - 600, width / 2, 0, 500);
            }
            if (currentActivity() == "com.taobao.tao.TBMainActivity") {
                openTBandsearch();
                jinhuodong();
                if (context_Manualstate == 1) {
                    dialogs.alert("您当前已手动调用界面模式运行！\n请准备点击“充能量”按钮进入“充能量中心”即可！\n\n准备好了就点“确定”哦～");
                    var Tips_clickbutton = 5;
                    for (Tips_clickbutton == 5; Tips_clickbutton > 0; Tips_clickbutton--) {
                        toastLog("请点击“充能量”按钮进入充能量中心即可\n剩余" + Tips_clickbutton + "秒后开始进行自动任务……");
                        sleep(2000);
                    }
                } else {
                    click_powerˉqiandao();
                }
            } else {
                Justback();
                sleep(2000);
                if (text("已完成").exists()) {
                    toastLog("已返回活动界面");
                } else {
                    toastLog("未能返回任务界面，再次返回");
                    Justback();
                }
            }
        }
    }
    while (textContains("去搜索").exists()) {
        textContains("去搜索").findOne().click();
        var dengdai10s = 10;
        for (dengdai10s == 10; dengdai10s > 0; dengdai10s--) {
            toastLog("正在完成“去搜索”任务\n剩余" + dengdai10s + "秒……")
            sleep(2000);
            swipe(width / 2, height - 600, width / 2, 0, 500);
        }
        Justback();
        sleep(2000);
        if (text("已完成").exists()) {
            toastLog("已返回活动界面");
        } else {
            toastLog("未能返回任务界面，再次返回");
            Justback();
        }
    }

    /*if (textContains("淘宝人生").exists()) {
        textContains("淘宝人生").findOne().click();
        var dengdai10s = 10;
        for (dengdai10s == 10; dengdai10s > 0; dengdai10s--) {
            toastLog("正在完成“淘宝人生”任务\n剩余" + dengdai10s + "秒……");
            sleep(2000);
        }
        click(width / 2, y_half + y_half / 3);
        Justback();
        if (currentActivity() == "com.taobao.browser.MultiBrowserActivity") {
            click(width / 2, y_half + y_half / 3);
            Justback();
        }
    }*/
    if (textContains("前往双12互动群签到(0/1) 签到得10000能量 去签到").exists()) {
        textContains("前往双12互动群签到(0/1) 签到得10000能量 去签到").findOne().click();
        var dengdai10s = 5;
        for (dengdai10s == 5; dengdai10s > 0; dengdai10s--) {
            toastLog("正在完成“去签到”任务\n剩余" + dengdai10s + "秒……")
            sleep(2000);
        }
        if (desc("立即打卡").exists()) {
            var O = desc("立即打卡").findOne().bounds();
            click(O.centerX(), O.centerY());
        } else if (textContains("立即打卡").exists()) {
            textContains("立即打卡").findOne().click();
        }
        jinhuodong();
        if (context_Manualstate == 1) {
            dialogs.alert("您当前已手动调用界面模式运行！\n请准备点击“充能量”按钮进入“充能量中心”即可！\n\n准备好了就点“确定”哦～");
            var Tips_clickbutton = 5;
            for (Tips_clickbutton == 5; Tips_clickbutton > 0; Tips_clickbutton--) {
                toastLog("请点击“充能量”按钮进入充能量中心即可\n剩余" + Tips_clickbutton + "秒后开始进行自动任务……");
                sleep(2000);
            }
        } else {
            click_powerˉqiandao();
        }
    }
    if (textContains("去拍摄").exists()) {
        textContains("去拍摄").findOne().click();
        sleep(3000);
        if (id("scan_icon").exists()) {
            toastLog("正在完成“去拍摄”任务\n已找到了“扫描按钮”");
            var G = id("scan_icon").findOne().bounds();
            click(G.centerX(), G.centerY());
            sleep(3000);
            openTBandsearch();
            jinhuodong();
            if (context_Manualstate == 1) {
                dialogs.alert("您当前已手动调用界面模式运行！\n请准备点击“充能量”按钮进入“充能量中心”即可！\n\n准备好了就点“确定”哦～");
                var Tips_clickbutton = 5;
                for (Tips_clickbutton == 5; Tips_clickbutton > 0; Tips_clickbutton--) {
                    toastLog("请点击“充能量”按钮进入充能量中心即可\n剩余" + Tips_clickbutton + "秒后开始进行自动任务……");
                    sleep(2000);
                }
            } else {
                click_powerˉqiandao();
            }
        }
    }
}
sleep(1000);
toastLog("已检测不到任务，进行第二次循环以保证任务完成……");
openTBandsearch();
jinhuodong();
if (context_Manualstate == 1) {
    dialogs.alert("您当前已手动调用界面模式运行！\n请准备点击“充能量”按钮进入“充能量中心”即可！\n\n准备好了就点“确定”哦～");
    var Tips_clickbutton = 5;
    for (Tips_clickbutton == 5; Tips_clickbutton > 0; Tips_clickbutton--) {
        toastLog("请点击“充能量”按钮进入充能量中心即可\n剩余" + Tips_clickbutton + "秒后开始进行自动任务……");
        sleep(2000);
    }
} else {
    click_powerˉqiandao();
}
main_js_clickAll15s();
sleep(1000);
dialogs.alert("(☞ﾟ∀ﾟ)☞\n(☞^o^) ☞     脚本已运行完毕\n(☞ ͡° ͜ʖ ͡°)☞    赶快去掷骰子吧", "检测不到任务喽～\n如有遗漏请自行操作或再次运行\n如有任何问题欢迎向作者反馈哦～\n\n脚本作者@橘衫下邂逅的时光");
device.cancelKeepingAwake();
exit();
